<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Document</title>
  <link rel="stylesheet" href="/css/searchbar.css" />
</head>
<body>
  <form id="searchbar" class="search-bar" action="/search-rides" method="POST">
    <div class="search-input">
      <input id="location" type="text" name="location" placeholder="Leaving from"  autocomplete="off" required/>
      <div id="locSugg" class="autocomplete-suggestions hidden"></div>
    </div>
    <div class="search-input">
    <input id="destination" type="text" name="destination" placeholder="Going to"  autocomplete="off" required/>
    <div id="desSugg" class="autocomplete-suggestions hidden"></div>
  </div>
  <div class="search-input">
    <input id="date" type="date" name="date"/>
</div>
<div class="search-input">
    <input id="passengers" type="number" min="1" value="1" name="passengers" placeholder="Passengers" />
  </div>
  <button class="search-btn" type="submit">Search</button>
  <div id="errDiv" style="color: red;">
  <%if(typeof error!=="undefined"){%>
    <%=error%>
  <%}%>
</div>

</form>
<script>
const date=document.getElementById("date")
const min= new Date().toISOString().slice(0,10)
date.setAttribute('min',min)



  async function geocode(query){
      try {
    const res=await fetch(`https://nominatim.openstreetmap.org/search?format=jsonv2&addressdetails=1&countrycodes=in&q=${encodeURIComponent(query)}`);
    if (!res.ok) throw new Error("Geocoding request failed");

    let data= await res.json();
    console.log("res obj",res," only json data",data)
     data = data.filter(item => ["city","town","village","administrative"].includes(item.type));
    console.log("Filtered results:", data);
    return data;
  } catch(err){
    console.error("Geocoding error:",err.message);
    return [];
  }
}
   
function setupAutocomplete(inputId, suggestionBoxId,onSelect) {
  const input=document.getElementById(inputId);
  const box = document.getElementById(suggestionBoxId);
      
  input.addEventListener("input", async()=>{
   const query=input.value.trim();
    box.innerHTML="";
    console.log(query)
   if(query.length<3) { 
      box.classList.add("hidden");
      return; }
  try{
    const results= await geocode(query);
    console.log("result of geoco",results)
    results.forEach(result=>{
    const addr = result.address;
    const parts=[];
      if(addr.city) parts.push(addr.city);
      else if(addr.town) parts.push(addr.town);
      else if(addr.village) parts.push(addr.village);
      if (addr.state_district) parts.push(addr.state_district);
      if (addr.state) parts.push(addr.state);

  const short= parts.join(", ");

    const div= document.createElement("div");
    console.log("names",result.display_name)
    //div.textContent=result.display_name;
    div.textContent=short; 

    div.addEventListener("click",()=>{
       input.value=short;
      // input.value=result.display_name;
       box.classList.add("hidden");
      console.log("clicked",result);
      onSelect(result);
     }); 
  box.appendChild(div);
});
  box.classList.remove("hidden");
}
catch(err) { console.error("Geocoding error:", err); }
});
}
   
setupAutocomplete("location","locSugg");
setupAutocomplete("destination","desSugg")   
</script>
</body>
</html>
